@use './color-value' as colorValue;
@use 'sass:map';

@function color($color, $shade) {
  @return map.get(map.get(colorValue.$colors, $color), $shade);
}

// Light mode colors (unchanged)
$light-text: (
  'text-white': color('gray', 50),
  'text-primary': color('gray', 900),
  'text-secondary': color('gray', 700),
  'text-tertiary': color('gray', 500),
  'text-placeholder': color('gray', 400),
  'text-disabled': color('gray', 300),
  'text-brand': color('blue', 500),
  'text-link': color('blue', 600),
  'text-link-hover': color('blue', 700),
  'text-notice': #dc2626,
  'text-success': #15803d,
  'text-warning': #b45309,
  'text-error': #b91c1c,
);

$light-surface: (
  'surface-default': color('gray', 0),
  'surface-primary': color('gray', 100),
  'surface-secondary': color('blue', 50),
  'surface-tertiary': color('gray', 200),
  'surface-black': color('gray', 900),
  'surface-disabled': color('gray', 300),
  'surface-brand': color('blue', 500),
  'surface-brand-hover': color('blue', 600),
  'surface-notice': #fee2e2,
  'surface-success': #dcfce7,
  'surface-warning': #fef3c7,
  'surface-error': #fee2e2,
);

$light-border: (
  'border-default': color('gray', 200),
  'border-strong': color('gray', 300),
  'border-hover': color('gray', 400),
  'border-disabled': color('gray', 300),
  'border-brand': color('blue', 500),
  'border-brand-hover': color('blue', 600),
  'border-success': #22c55e,
  'border-warning': #f59e0b,
  'border-error': #ef4444,
);

// Dark mode colors (unchanged)
$dark-text: (
  'text-white': color('gray', 0),
  'text-primary': color('gray', 50),
  'text-secondary': color('gray', 300),
  'text-tertiary': color('gray', 400),
  'text-placeholder': color('gray', 600),
  'text-disabled': color('gray', 700),
  'text-brand': color('blue', 500),
  'text-link': color('blue', 400),
  'text-link-hover': color('blue', 300),
  'text-notice': #ef4444,
  'text-success': #86efac,
  'text-warning': #fcd34d,
  'text-error': #fca5a5,
);

$dark-surface: (
  'surface-default': color('gray', 900),
  'surface-primary': color('gray', 800),
  'surface-secondary': color('blue', 900),
  'surface-tertiary': color('gray', 700),
  'surface-black': color('gray', 900),
  'surface-disabled': color('gray', 800),
  'surface-brand': color('blue', 500),
  'surface-brand-hover': color('blue', 700),
  'surface-notice': #7f1d1d,
  'surface-success': #14532d,
  'surface-warning': #78350f,
  'surface-error': #7f1d1d,
);

$dark-border: (
  'border-default': color('gray', 700),
  'border-strong': color('gray', 600),
  'border-hover': color('gray', 500),
  'border-disabled': color('gray', 800),
  'border-brand': color('blue', 500),
  'border-brand-hover': color('blue', 400),
  'border-success': #22c55e,
  'border-warning': #f59e0b,
  'border-error': #ef4444, // red-500
);

// Merging the light and dark themes
$light: map.merge(map.merge($light-text, $light-surface), $light-border);
$dark: map.merge(map.merge($dark-text, $dark-surface), $dark-border);

@mixin theme($theme-name) {
  @each $key, $value in $theme-name {
    --#{$key}: #{$value};
  }
}

:root {
  @include theme($light);
}

:root[data-theme='light'] {
  @include theme($light);
}

:root[data-theme='dark'] {
  @include theme($dark);
}
